@model Tv_Laidos.ViewModels.TvLaidaEditViewModel

@{
    ViewBag.Title = "TV laidos redagvimas";
    var psl_k_count = 0;
}

<h2>TV laidos redagvimas</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <fieldset>
        <legend>TV laidos informacija</legend>
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id_TV_LAIDA)

            @* Pavadinimo laukelis *@
            <div class="form-group">
                @Html.LabelFor(model => model.pavadinimas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.pavadinimas, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.pavadinimas, "", new { @class = "text-danger" })
                </div>
            </div>

            @* Trukems laukelis *@
            <div class="form-group">
                @Html.LabelFor(model => model.trukme, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.trukme, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.trukme, "", new { @class = "text-danger" })
                </div>
            </div>

            @* Isleidimo metu laukelis *@
            <div class="form-group">
                @Html.LabelFor(model => model.isleidimo_metai, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.isleidimo_metai, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.isleidimo_metai, "", new { @class = "text-danger" })
                </div>
            </div>

            @* reitingu laukelis *@
            <div class="form-group">
                @Html.LabelFor(model => model.reitingai, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.reitingai, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.reitingai, "", new { @class = "text-danger" })
                </div>
            </div>

            @* Ziurovu ivertinimo laukelis *@
            <div class="form-group">
                @Html.LabelFor(model => model.ziurovu_vidutinis_ivertinimas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ziurovu_vidutinis_ivertinimas, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ziurovu_vidutinis_ivertinimas, "", new { @class = "text-danger" })
                </div>
            </div>

            @* Aprasymo laukelis *@
            <div class="form-group">
                @Html.LabelFor(model => model.aprasymas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.aprasymas, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.aprasymas, "", new { @class = "text-danger" })
                </div>
            </div>

            @* Busenos laukelis *@
            <div class="form-group">
                @Html.LabelFor(model => model.busena, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.fk_modelis, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.busena, Model.BusenaList, "--------------", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.busena, "", new { @class = "text-danger" })
                </div>
            </div>

            @* Zanro laukelis *@
            <div class="form-group">
                @Html.LabelFor(model => model.zanras, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.fk_modelis, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.zanras, Model.ZanroList, "--------------", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.zanras, "", new { @class = "text-danger" })
                </div>
            </div>

            @* amziaus laukelis *@
            <div class="form-group">
                @Html.LabelFor(model => model.amziaus_reikalavimas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.fk_modelis, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.amziaus_reikalavimas, Model.AmziausReikalavimoList, "--------------", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.amziaus_reikalavimas, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Išsaugoti" class="btn btn-success" />
                </div>
            </div>
        </div>

    </fieldset>

    if (Model.apdovanojimai != null)
    {
        psl_k_count = Model.apdovanojimai.Count;
    }
    else
    {
        psl_k_count = 0;
    }


    <fieldset>
        <legend>Apdovanojimai</legend>
        <table>
            <tr style="background-color: lightgreen">
                @* Pridedami lenteliu pavadinimai *@
                <th style="width: 300px">
                    Kategorija
                </th>
                <th style="width: 300px">
                    Nominantas
                </th>
                <th style="width: 300px">
                    Gavimo metai
                </th>
            </tr>
        </table>
        <table class="table-responsive" id="apdovanojimai_tbl">
            <tr style="background-color: lightgreen">
                @* Pridedami lenteliu pavadinimai *@
                <th style="width: 300px">

                </th>
                <th style="width: 300px">

                </th>
                <th style="width: 300px">

                </th>
            </tr>
            <tbody>
                @{
                    for (int i = 0; i < Model.apdovanojimai.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.HiddenFor(model => model.apdovanojimai[i].id_APDOVANOJIMAS)
                                @Html.HiddenFor(model => model.apdovanojimai[i].fk_TV_LAIDAid_TV_LAIDA)
                                @Html.EditorFor(modelItem => Model.apdovanojimai[i].kategorija)
                            </td>
                            <td>
                                @Html.EditorFor(modelItem => Model.apdovanojimai[i].nominantas)
                            </td>
                            <td>
                                @Html.EditorFor(modelItem => Model.apdovanojimai[i].gavimo_metai)
                            </td>
                            <td><button type="button" class="btn btn-danger" onclick="salinti(this)"><i class="glyphicon-remove"></i> Šalinti</button></td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        <input type="hidden" disabled value="@psl_k_count" id="hCount" />
        <button type="button" id="prideti" class="btn btn-info pull-right" onclick="uzsakyti($('#hCount').val());">
            <i class="glyphicon-plus-sign"></i>
            Pridėti
        </button>
    </fieldset>
}



<div>
    @Html.ActionLink("Atgal į sąrašą »", "Index", "TvLaidos", new { @class = "btn btn-default" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script>

        function uzsakyti(sk) {
            var tmp_row = `
               <tr>
                <td>
                   <input data-val="true" data-val-number="The field fk_TV_Laidais_TV_LAIDA must be a number." data-val-required="The fk_TV_LAIDAid_TV_LAIDA field is required." id="apdovanojimai_` + sk + `__is_TV_LAIDA" name="apdovanojimai[` + sk + `].fk_TV_LAIDAid_TV_LAIDA" type="hidden" value="0">
                   <input data-val="true" data-val-number="The field id_APDOVANOJIMAS must be a number." data-val-required="The id_APDOVANOJIMAS field is required." id="apdovanojimai_`+ sk + `__APDOVANOJIMAS" name="apdovanojimai[` + sk + `].id_APDOVANOJIMAS" type="hidden" value="0">
                   <input data-val="true" data-val-text="The field Kategorija must be a text." data-val-required="The Kategorija field is required." id="apdovanojimai_`+ sk + `__Kategorija" name="apdovanojimai[` + sk + `].kategorija" type="text">
                </td>
                 <td>
                    <input data-val="true" data-val-text="The field Nominantas must be a text." data-val-required="The Nominantas field is required." id="apdovanojimai_`+ sk + `__Nominantas" name="apdovanojimai[` + sk + `].nominantas" type="text">
                 </td>
                 <td>
                    <input data-val="true" data-val-number="The field Gavimo metai must be a number." data-val-required="The Gavimo metai field is required." id="apdovanojimai_`+ sk + `__GavimoMetai" name="apdovanojimai[` + sk + `].gavimo_metai" type="number">
                </td>

                 <td><button type="button" class="btn btn-danger" onclick="salinti(this)"><i class="glyphicon-remove"></i> Šalinti</button></td>
                </tr>`;

            $("#apdovanojimai_tbl tr:last").after(tmp_row);

            $('#hCount').val(Number($('#hCount').val()) + 1);

        }

        function salinti(btn) {
            $(btn).closest('tr').remove();

            var cnt = 0;

            $("#apdovanojimai_tbl tbody tr").each(function () {
                var tmp_row = "<tr>" + $(this).html() + "</tr>";
                var new_tmp_row = tmp_row.replace(/\[(.)\]/g, "[" + cnt + "]");
                new_tmp_row = new_tmp_row.replace(/\_(.)\_/g, "_" + cnt + "_");
                console.log(new_tmp_row);
                $(this).replaceWith(new_tmp_row);
                cnt = cnt + 1;
            });

            $('#hCount').val(cnt);
        }
    </script>

}